'use client';

import { detectAIContent, getAIDetectionSummary, getAIDetectionColor } from '@/lib/aiDetection';

interface AIDetectionResultsProps {
  text: string;
}

export default function AIDetectionResults({ text }: AIDetectionResultsProps) {
  if (!text || text.trim().length < 50) {
    return null;
  }

  const result = detectAIContent(text);

  return (
    <div className="mt-6 p-6 bg-white rounded-xl shadow-lg border">
      <div className="flex items-center space-x-3 mb-4">
        <div className="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
          <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
          </svg>
        </div>
        <div>
          <h3 className="text-xl font-bold text-gray-900">ü§ñ AI Content Detection</h3>
          <p className="text-sm text-gray-600">Checks for content generated by ChatGPT, Claude, and other AI tools</p>
        </div>
      </div>

      {/* Main Result */}
      <div className={`p-4 rounded-lg border-2 mb-4 ${
        result.confidence >= 70 ? 'border-red-200 bg-red-50' :
        result.confidence >= 40 ? 'border-orange-200 bg-orange-50' :
        result.confidence >= 20 ? 'border-yellow-200 bg-yellow-50' :
        'border-green-200 bg-green-50'
      }`}>
        <div className="flex items-center justify-between mb-2">
          <div className={`text-lg font-bold ${getAIDetectionColor(result.confidence)}`}>
            {result.confidence}% AI similarity detected
          </div>
          <div className={`px-3 py-1 rounded-full text-sm font-medium ${getAIDetectionColor(result.confidence)}`}>
            {getAIDetectionSummary(result)}
          </div>
        </div>
        
        {result.confidence >= 30 && (
          <p className="text-sm text-gray-700">
            {result.confidence >= 70 
              ? "High probability of AI-generated content. Significant revision recommended."
              : result.confidence >= 40
              ? "Moderate AI patterns detected. Consider personalizing the content."
              : "Some AI-like patterns found. Review for originality."
            }
          </p>
        )}
      </div>

      {/* Detected Patterns */}
      {result.detectedPatterns.length > 0 && (
        <div className="mb-4">
          <h4 className="font-semibold text-gray-900 mb-2">üîç Detected AI Patterns:</h4>
          <div className="space-y-2">
            {result.detectedPatterns.slice(0, 5).map((pattern, index) => (
              <div key={index} className="bg-gray-50 p-3 rounded-lg border">
                <code className="text-sm text-gray-800">{pattern}</code>
              </div>
            ))}
            {result.detectedPatterns.length > 5 && (
              <p className="text-sm text-gray-600">
                ... and {result.detectedPatterns.length - 5} more patterns
              </p>
            )}
          </div>
        </div>
      )}

      {/* Analysis Reasons */}
      {result.reasons.length > 0 && (
        <div className="mb-4">
          <h4 className="font-semibold text-gray-900 mb-2">üìä Analysis Details:</h4>
          <ul className="space-y-1">
            {result.reasons.map((reason, index) => (
              <li key={index} className="flex items-center text-sm text-gray-700">
                <span className="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>
                {reason}
              </li>
            ))}
          </ul>
        </div>
      )}

      {/* Recommendations */}
      <div>
        <h4 className="font-semibold text-gray-900 mb-2">üí° Recommendations:</h4>
        <div className="space-y-2">
          {result.recommendations.map((recommendation, index) => (
            <div key={index} className="flex items-start space-x-2">
              <span className="text-green-500 mt-1">‚úì</span>
              <p className="text-sm text-gray-700">{recommendation}</p>
            </div>
          ))}
        </div>
      </div>

      {/* Additional Tips */}
      {result.confidence >= 30 && (
        <div className="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <h5 className="font-medium text-blue-900 mb-2">üí° Tips for Original Writing:</h5>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚Ä¢ Use personal experiences and specific examples</li>
            <li>‚Ä¢ Write in your natural speaking voice</li>
            <li>‚Ä¢ Include informal language and contractions</li>
            <li>‚Ä¢ Add unique insights and opinions</li>
            <li>‚Ä¢ Vary sentence length and structure</li>
          </ul>
        </div>
      )}
    </div>
  );
}
